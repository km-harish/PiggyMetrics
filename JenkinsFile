pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        git branch:'main', url:'https://github.com/km-harish/PiggyMetrics.git'
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withSonarQubeEnv('sonarqube') {
          bat 'mvn clean package sonar:sonar -Dmaven.test.skip=true -Dsonar.projectKey=PiggyMetrics'
        }
      }
    }

    stage('Build Docker Images') {
      steps {
        script {
          def modules = ['config', 'monitoring', 'registry', 'gateway','auth-service','account-service','statistics-service','notification-service','turbine-stream-service'] // Replace with your submodule names
          VERSION_NUMBER = VersionNumber(versionNumberString: '${BUILDS_ALL_TIME}')
          for (def module in modules) {

            docker.withRegistry('https://index.docker.io', 'dockerhub') {
              def tag = "version-${VERSION_NUMBER}"
              def imageName = "kmharish1/${module}"
              def dockerfile = "${module}/Dockerfile" // Replace with the path to your Dockerfile

              bat "docker build -t ${imageName} -f ${dockerfile} ./${module}"
              bat "docker tag ${imageName}:latest ${imageName}:${tag}"
              bat "docker push ${imageName}:${tag}"
            }
          }
        }
      }
    }
  }
}


